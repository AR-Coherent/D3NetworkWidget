// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static myfirstmodule.proxies._Context createContext(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.CreateContext").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies._Context.initialize(context, result);
	}
	public static java.util.List<myfirstmodule.proxies.LinkNPE> createLinks(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.CreateLinks").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.LinkNPE> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.LinkNPE.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.NodeNPE> createNodes(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.CreateNodes").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.NodeNPE> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.NodeNPE.initialize(context, obj));
		}
		return result;
	}
	public static void nodeClicked(IContext context, myfirstmodule.proxies.Node _node, myfirstmodule.proxies._Context __Context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Node", _node == null ? null : _node.getMendixObject());
		params.put("_Context", __Context == null ? null : __Context.getMendixObject());
		Core.microflowCall("MyFirstModule.NodeClicked").withParams(params).execute(context);
	}
}